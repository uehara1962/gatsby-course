// import React from "react"
// import { Link } from "gatsby"

// import Layout from "../components/layout"
// import SEO from "../components/seo"

// const IndexPage = () => (
//   <Layout>
//     <SEO title="Home" />
//     <h1>Home</h1>
//     <ul>
//       <li>
//         <a href="/about">About</a>
//       </li>
//       <li>
//         <Link to="/" activeStyle={{ color: "red" }}>
//           Home
//         </Link>
//       </li>
//       <li>
//         <Link to="/about">About</Link>
//       </li>
//     </ul>
//   </Layout>
// )

// export default IndexPage

// S>----------------------------------------------------------------------------------------<//

// import React from "react"

// import Layout from "../components/Layout"
// import SEO from "../components/seo"
// import PostItem from "../components/PostItem"

// const IndexPage = () => (
//   <Layout>
//     <SEO title="Home" />
//     <PostItem
//       slug="/about/"
//       category="Misc"
//       date="30 de Julho de 2019"
//       timeToRead="5"
//       title="Diga não ao Medium: tenha sua própria plataforma"
//       description="Algumas razões para você ter sua própria plataforma ao invés de soluções como o Medium."
//     />
//   </Layout>
// )

// export default IndexPage

// S>----------------------------------------------------------------------------------------<//

// import React from "react"
// import { useStaticQuery, graphql } from "gatsby"

// import Layout from "../components/Layout"
// import SEO from "../components/seo"
// import PostItem from "../components/PostItem"

// const IndexPage = () => {
//   const { allMarkdownRemark } = useStaticQuery(graphql`
//     query PostList {
//       allMarkdownRemark {
//         edges {
//           node {
//             id
//             frontmatter {
//               background
//               category
//               date(locale: "pt-br", formatString: "DD [de] MMMM [de] YYYY")
//               description
//               title
//             }
//             timeToRead
//             wordCount {
//               words
//             }
//           }
//         }
//       }
//     }
//   `)

//   const posList = allMarkdownRemark.edges

//   return (
//     <Layout>
//       <SEO title="Home" />
//       {posList.map(
//         ({
//           node: {
//             frontmatter: { background, category, date, description, title },
//             timeToRead,
//           },
//         }) => (
//           <PostItem
//             slug="/about/"
//             background={background}
//             category={category}
//             date={date}
//             timeToRead={timeToRead}
//             title={title}
//             description={description}
//           />
//         )
//       )}
//     </Layout>
//   )
// }

// export default IndexPage

// S>----------------------------------------------------------------------------------------<//

import React from "react"
import { useStaticQuery, graphql } from "gatsby"

import Layout from "../components/Layout"
import SEO from "../components/seo"
import PostItem from "../components/PostItem"

const IndexPage = () => {
  const { allMarkdownRemark } = useStaticQuery(graphql`
    query PostList {
      allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {
        edges {
          node {
            fields {
              slug
            }
            id
            frontmatter {
              background
              category
              date(locale: "pt-br", formatString: "DD [de] MMMM [de] YYYY")
              description
              title
            }
            timeToRead
          }
        }
      }
    }
  `)

  const postList = allMarkdownRemark.edges

  return (
    <Layout>
      <SEO title="Home" />
      {postList.map(
        ({
          node: {
            frontmatter: { background, category, date, description, title },
            timeToRead,
            fields: { slug },
          },
        }) => (
          <PostItem
            slug={slug}
            background={background}
            category={category}
            date={date}
            timeToRead={timeToRead}
            title={title}
            description={description}
          />
        )
      )}
    </Layout>
  )
}

export default IndexPage
